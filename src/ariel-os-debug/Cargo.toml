[package]
name = "ariel-os-debug"
version = "0.1.0"
license.workspace = true
edition.workspace = true
repository.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lints]
workspace = true

[package.metadata.feature-groups]
debug-backend.xor = { features = ["esp-println", "rtt-target", "uart"] }

[package.metadata.features]
debug-console = { groups = ["debug-backend"] }

[dependencies]
ariel-os-debug-log = { workspace = true }
ariel-os-utils = { workspace = true }
const-str = { workspace = true }
embassy-futures = { workspace = true, optional = true }
# embassy-nrf = { workspace = true, optional = true }
embassy-stm32 = { workspace = true, optional = true }
embassy-sync = { workspace = true, optional = true }
embedded-io= { workspace = true, optional = true }
embedded-io-async = { workspace = true, optional = true }
featurecomb = { workspace = true }
log = { workspace = true, optional = true }
rtt-target = { workspace = true, optional = true }
semihosting = { workspace = true, optional = true }

[target.'cfg(context = "xtensa")'.dependencies]
semihosting = { workspace = true, optional = true, features = [
  "openocd-semihosting",
] }

[target.'cfg(context = "esp")'.dependencies]
esp-println = { workspace = true, optional = true, features = ["log"] }
log = { version = "0.4.20" }

[target.'cfg(context = "esp32")'.dependencies]
esp-println = { workspace = true, optional = true, features = ["esp32"] }

[target.'cfg(context = "esp32c3")'.dependencies]
esp-println = { workspace = true, optional = true, features = ["esp32c3"] }

[target.'cfg(context = "esp32c6")'.dependencies]
esp-println = { workspace = true, optional = true, features = ["esp32c6"] }

[target.'cfg(context = "esp32s3")'.dependencies]
esp-println = { workspace = true, optional = true, features = ["esp32s3"] }

[features]
debug-console = []

defmt = [
  "ariel-os-debug-log/defmt",
  "esp-println?/defmt-espflash",
  "rtt-target?/defmt",
]
log = ["dep:log", "ariel-os-debug-log/log"]

semihosting = ["dep:semihosting"]

esp-println = ["dep:esp-println"]
rtt-target = ["dep:rtt-target"]
uart = [
  "dep:embassy-futures",
  # "dep:embassy-nrf",
  "dep:embassy-stm32",
  "dep:embassy-sync",
  "dep:embedded-io",
  "dep:embedded-io-async",
]
